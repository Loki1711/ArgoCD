apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata: 
  name:  managed-premium-retain-sc
provisioner: disk.csi.azure.com
parameters:
  storageaccounttype: Premium_LRS 
  kind: managed
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true  

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: azure-managed-disk-pvc
  namespace: default
spec:
  storageClassName: managed-premium-retain-sc
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
      
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: myconfigmap
data:
  mysql_usermgmt.sql: |-
    DROP DATABASE IF EXISTS webappdb;
    CREATE DATABASE webappdb; 

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name:  mysql
spec:
  selector:
    matchLabels:
      app: mysql
  replicas: 1
  strategy: 
    type: Recreate
  template:
    metadata:
      labels:
        app:  mysql
    spec:
      containers:
        - name:  mysql
          image: mysql:5.6
          resources:
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: dbpassword11
          ports:
            - containerPort:  3306
              name:  mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql 
            - name: usermanagement-dbcreation-script
              mountPath: /docker-entrypoint-initdb.d

      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: azure-managed-disk-pvc
        - name: usermanagement-dbcreation-script
          configMap:
            name: myconfigmap
            
---

apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
  clusterIP: None
  ports:
    - name: mysql
      port: 3306
